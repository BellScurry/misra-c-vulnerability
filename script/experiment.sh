#!/bin/bash
# Script Usage
#   $1: gemV Home
#   $2: gemV Config Directory
#   $3: Bench Config Directory
#   $4: Output Home


# --help
usage() {

    echo "Usage: experiment.sh [--help] <gemV home> <gemV config directory> <bench config directory> <output home>"
}

# Usage
#   $1: Config File. Must be .csv format
#       ex) config1.csv
csv2option() {

    if [[ "$#" -ne 1 ]]; then
        exit
    fi

    result=""
    while IFS= read -r line || [[ -n $line ]];
    do
        col1=$(echo $line | sed 's/\(.*\),.*/\1/')

        if [[ ! -z $(echo $line | awk '/[^,]*,\s*\S+.*/') ]]; then

            col2=$(echo $line | sed 's/^[^,]*,[[:space:]]*\(.*\)$/\1/')
            result="$result --$col1=$col2 "
        else
            result="$result --$col1 "
        fi
    done < $1

    echo $result
}

# Usage
#    $1: Statistics File
#    $2: Digest File
#
# Absolute Path Info
make_digest() {

    if [[ "$#" -ne 2 ]]; then
        exit
    fi

    # Find keyword 'vulnerability', 'sim_ticks', and 'sim_insts'.
    # Then, print whole line.
    sed -n '/^.*\(vulnerability\|sim_ticks\|sim_insts\).*$/p' $1 > $2
}

# Usage
#    $1: Stat File
#    $2: Output File
stat2csv() {

    if [[ "$#" -ne 2 ]]; then
        exit
    fi

    sed $1 > $2 \
        -e '/^.*\(Begin\|End\).*$/d' \
        -e '/^[[:space:]]*$/d' \
        -e 's/#.*$//' \
        -e 's/[[:space:]]\+\([^[:space:]]\+\)/, \1/g'
}

# Argument Parsing
arghit=0    # Number of essential arguments

for arg in "$@"
do
    case $arg in 
        --help)
            usage
            exit
            ;;
        --*)
            ;;
        -*)
            ;;
        *)
            arghit=$((arghit+1))
            case $arghit in
                1)
                    GEMV_HOME=${arg}
                    ;;
                2)
                    GEMV_CONFIG_DIR=${arg}
                    ;;
                3)
                    BENCH_CONFIG_DIR=${arg}
                    ;;
                4)
                    OUTPUT_HOME=${arg}
                    ;;
                *)
                    ;;
            esac
            ;;
    esac
done

if [[ "$#" -lt 4 ]]; then
    echo "ERROR: Too less arguments"
    usage
    exit
fi

if [[ "$#" -gt 4 ]]; then
    echo "ERROR: Too many arguments"
    usage
    exit
fi

# CONSTANTS
GEMV_BINARY="${GEMV_HOME}/build/ARM/gem5.opt"
GEMV_SIMSCRIPT="${GEMV_HOME}/configs/example/se.py"

# Start Experiment
for file in $GEMV_CONFIG_DIR/config*.csv
do
    gemv_confignum=$(echo $file | sed 's/^\([^\/]*\/\)*config\([0-9]\+\).csv$/\2/')
    
    # Convert contents in .csv file to command option string, using csv2option().
    gemv_config=$(csv2option $file)

    for benchfile in $BENCH_CONFIG_DIR/config*.csv
    do
        bench_confignum=$(echo $benchfile | sed 's/^\([^\/]*\/\)*config\([0-9]\+\).csv$/\2/')
    
        # Convert contents in .csv file to command option string, using csv2option().
        bench_config=$(csv2option $benchfile)

        output_dir="$OUTPUT_HOME/gemv_config${gemv_confignum}/bench_config${bench_confignum}"
        gemv_option="-re --outdir=$output_dir"
        simscript_option="${gemv_config} ${bench_config}"

        # Do Simulation
        $GEMV_BINARY $gemv_option $GEMV_SIMSCRIPT $simscript_option

        # Make Digest using make_digest()
        make_digest $output_dir/stats.txt $output_dir/digest_${gemv_confignum}_${bench_confignum}.txt
    done
done
