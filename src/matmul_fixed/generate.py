#
# Reference: https://github.com/CNugteren/myGEMM/blob/master/extra/minimal.cpp
#
import os
import sys

def gen_matrix1(rowsize, colsize):
    matrix = []
    i = 0
    for row in range(0, int(rowsize)):
        for col in range(0, int(colsize)):
            e = i**2 + 3.6*i + 3.1
            i += 1
            matrix.append(str(e))
    return matrix


def gen_matrix2(rowsize, colsize):
    matrix = []
    i = 0
    for row in range(0, int(rowsize)):
        for col in range(0, int(colsize)):
            e = 0.01*i**2 + 1.2*i + 13.9
            i += 1
            matrix.append(str(e))
    return matrix


if __name__ == '__main__':
    # Generate workload matrices
    with open(sys.argv[1], 'w') as workload:
        workload.write(" ".join(sys.argv[3:7]) + '\n')
        workload.write(" ".join(gen_matrix1(sys.argv[3], sys.argv[4])) + '\n')
        workload.write(" ".join(gen_matrix2(sys.argv[5], sys.argv[6])) + '\n')

    # Generate 'Makefile'
    #   tmplist: string(line) list
    tmplist = []
    alloc_size = sys.argv[2]
    prefix = 'matmul_fixed_' + alloc_size

    #   Makefile variables
    tmplist.append('CC= arm-linux-gnueabi-gcc')
    tmplist.append('CFLAGS= -static -O0')
    tmplist.append('source= matmul_fixed.c')
    tmplist.append('dump= arm-linux-gnueabi-objdump')

    #   all:
    tmplist.append('all:')
    
    #     Compilation
    normal_bin = prefix + '_normal'
    misrac_bin = prefix + '_misrac'
    tmplist.append(' '.join(['\t', '$(CC)', '$(CFLAGS)', '$(source)', '         ', '-D_ALLOC_SIZE=' + alloc_size, '-o', normal_bin]))
    tmplist.append(' '.join(['\t', '$(CC)', '$(CFLAGS)', '$(source)', '-D_MISRAC', '-D_ALLOC_SIZE=' + alloc_size, '-o', misrac_bin]))

    #     Disasseble
    normal_s = prefix + '_normal.s'
    misrac_s = prefix + '_misrac.s'
    tmplist.append(' '.join(['\t', '$(dump)', '-d', normal_bin, '>', normal_s]))
    tmplist.append(' '.join(['\t', '$(dump)', '-d', misrac_bin, '>', misrac_s]))

    #     Strip to get only assembly code of main()
    parser = os.path.abspath(os.path.abspath(os.path.realpath(__file__) + '/../../../script/parse_binary.py'))
    normal_main = prefix + '_normal.main.txt'
    misrac_main = prefix + '_misrac.main.txt'
    tmplist.append(' '.join(['\t', 'python3', parser, normal_s, normal_main]))
    tmplist.append(' '.join(['\t', 'python3', parser, misrac_s, misrac_main]))

    #     Diff two assembly code for main()
    tmplist.append(' '.join(['\t', '-diff', '-sq', normal_main, misrac_main]))

    #   clean:
    tmplist.append('clean:')
    tmplist.append(' '.join(['\t', 'rm', '*_normal', '*_misrac', '*.s', '*.txt']))
    with open(os.path.abspath(os.getcwd() + '/Makefile'), 'w') as makefile:
        makefile.write('\n'.join(tmplist))
